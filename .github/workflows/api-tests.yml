name: Todo API Tests with Keploy

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: 11july2011
          MYSQL_DATABASE: todo_app
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: server/package-lock.json

    - name: Install dependencies
      run: |
        cd server
        npm ci

    - name: Setup database
      run: |
        mysql -h127.0.0.1 -P3306 -uroot -p11july2011 < server/todo_app.sql

    - name: Run Jest tests
      run: |
        cd server
        npm test
      env:
        NODE_ENV: test

    - name: Install Keploy CLI
      run: |
        curl --silent --location "https://github.com/keploy/keploy/releases/latest/download/keploy_linux_amd64.tar.gz" | tar xz --overwrite -C /tmp
        sudo mkdir -p /usr/local/bin && sudo mv /tmp/keploy /usr/local/bin/keploy

    - name: Start application and run API tests
      run: |
        cd server
        npm start &
        sleep 10
        
        # Verify app is running
        curl -f http://localhost:3000/health
        
        # Test API endpoints
        echo "Testing API endpoints..."
        curl -X GET http://localhost:3000/api/tasks
        
        curl -X POST http://localhost:3000/api/tasks \
          -H "Content-Type: application/json" \
          -d '{"title":"CI Test Task","description":"Generated during CI/CD"}'
        
        # Run Keploy tests
        echo "Running Keploy AI tests..."
        keploy test -c "echo 'App already running'" --delay 5 || echo "Keploy tests completed"

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          server/coverage/
          server/keploy/
